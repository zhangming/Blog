(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{583:function(e,r,v){"use strict";v.r(r);var t=v(17),a=Object(t.a)({},(function(){var e=this,r=e.$createElement,v=e._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"什么是-service-worker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-service-worker"}},[e._v("#")]),e._v(" 什么是 Service Worker")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("Service Worker 是浏览器在后台独立于网页运行的脚本，它打开了通向不需要网页或用户交互的功能的大门。 现在，它们已包括如推送通知和后台同步等功能。 将来，Service Worker 将会支持如定期同步或地理围栏等其他功能。")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://user-images.githubusercontent.com/35094245/57836525-7bd7a880-77f3-11e9-9fd9-118044f514cd.png",alt:"image.png"}})]),e._v(" "),v("p",[e._v("Service Worker 的生命周期与 web 页面完全分离。它包括以下几个阶段:")]),e._v(" "),v("ul",[v("li",[e._v("下载")]),e._v(" "),v("li",[e._v("安装")]),e._v(" "),v("li",[e._v("激活")])]),e._v(" "),v("h3",{attrs:{id:"下载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[e._v("#")]),e._v(" 下载")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("这是浏览器下载包含 Service Worker 的 .js 文件的时候。")]),e._v(" "),v("h3",{attrs:{id:"安装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),v("p",[e._v("要为 web 应用程序安装 Service Worker，必须先注册它，这可以在 JavaScript 代码中完成。注册 Service Worker 后，它会提示浏览器在后台启动 Service Worker 安装步骤。")]),e._v(" "),v("p",[e._v("通过注册 Service Worker，你可以告诉浏览器你的 Service Worker 的 JavaScript 文件的位置。看看下面的代码:")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://user-images.githubusercontent.com/35094245/57836916-4c756b80-77f4-11e9-90f1-2b4a7ad6b637.png",alt:"image.png"}})]),e._v(" "),v("p",[e._v("上例代码首先检查当前环境中是否支持 Service Worker API。如果支持，则 /sw.js 这个 Service Worker 就被注册了。")]),e._v(" "),v("p",[e._v("每次页面加载时都可以调用 register() 方法，浏览器会判断 Service Worker 是否已经注册，根据注册情况会对应的给出正确处理。")]),e._v(" "),v("p",[e._v("register() 方法的一个重要细节是 Service Worker 文件的位置。在本例中，可以看到 Service Worker 文件位于域的根目录，这意味着 Service Worker 范围将是这个域下的。换句话说，这个 Service Worker 将为这个域中的所有内容接收 fetch 事件。如果我们在 /example/sw.js 注册 Service Worker 文件，那么 Service Worker 只会看到以 /example/ 开头的页面的 fetch 事件（例如 /example/page1/、/example/page2/）。")]),e._v(" "),v("p",[e._v("通常在安装步骤中，你需要缓存一些静态资源。 如果所有文件都缓存成功，则 Service Worker 将被安装。 如果任何文件无法下载和缓存，则安装步骤将失败，Service Worker 将不会激活（即不会被安装）。 如果发生这种情况，不要担心，下次再试一次。 但是，这意味着如果它安装，你知道你有这些静态资源在缓存中。")]),e._v(" "),v("p",[e._v("如果注册需要在加载事件之后发生，这就解答了你“注册是否需要在加载事件之后发生”的疑惑。这不是必要的，但绝对是推荐的。")]),e._v(" "),v("p",[e._v("为什么？让我们考虑用户第一次访问你的 Web 应用程序。目前还没有 Service Worker，而且浏览器无法预先知道最终是否会安装 Service Worker。如果安装了 Service Worker，浏览器将需要为这个额外的线程花费额外的 CPU 和内存，否则浏览器将把这些额外的 CPU 和内存用于呈现 Web 页面。")]),e._v(" "),v("p",[e._v("最重要的是，如果在页面上安装一个 Service Worker，就可能会有延迟加载和渲染的风险 —— 而不是尽快让你的用户可以使用该页面。")]),e._v(" "),v("p",[e._v("注意，这种情况对第一次的访问页面时才会有。后续的页面访问不会受到 Service Worker 安装的影响。一旦 Service Worker 在第一次访问页面时被激活，它就可以处理加载/缓存事件，以便后续访问 Web 应用程序。这一切都是有意义的，因为它需要准备好处理受限的的网络连接。")]),e._v(" "),v("h3",{attrs:{id:"激活"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#激活"}},[e._v("#")]),e._v(" 激活")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("安装 Service Worker 之后，下一步将是激活它，这是处理旧缓存管理的好机会。")]),e._v(" "),v("p",[e._v("在激活步骤之后，Service Worker 将控制所有属于其范围的页面，尽管第一次注册 Service Worker 的页面将不会被控制，直到再次加载。")]),e._v(" "),v("p",[e._v("Service Worker 一旦掌控，它将处于以下两种状态之一：")]),e._v(" "),v("p",[e._v("处理从网页发出网络请求或消息时发生的提取和消息事件")]),e._v(" "),v("p",[e._v("Service Worker 将被终止以节省内存")]),e._v(" "),v("p",[e._v("Service Worker 生命周期如下：")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://user-images.githubusercontent.com/35094245/57836926-526b4c80-77f4-11e9-8c56-cef2ae0d65f6.png",alt:"image.png"}})]),e._v(" "),v("h3",{attrs:{id:"要求-https-的原因"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#要求-https-的原因"}},[e._v("#")]),e._v(" 要求 HTTPS 的原因")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("在构建 Web 应用程序时，通过 localhost 使用 Service Workers，但是一旦将其部署到生产环境中，就需要准备好 HTTPS( 这是使用HTTPS 的最后一个原因)。")]),e._v(" "),v("p",[e._v("使用 Service Worker，可以很容易被劫持连接并伪造响应。如果不使用 HTTPs，人的web应用程序就容易受到黑客的攻击。")]),e._v(" "),v("p",[e._v("为了更安全，你需要在通过 HTTPS 提供的页面上注册 Service Worker，以便知道浏览器接收的 Service Worker 在通过网络传输时未被修改。")]),e._v(" "),v("h3",{attrs:{id:"浏览器支持"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器支持"}},[e._v("#")]),e._v(" 浏览器支持")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("浏览器的支持正在变的越来越好\n"),v("img",{attrs:{src:"https://user-images.githubusercontent.com/35094245/57836985-6fa01b00-77f4-11e9-9360-e391f0905590.png",alt:"image.png"}})]),e._v(" "),v("p",[e._v("参考：\n"),v("a",{attrs:{href:"https://developers.google.com/web/fundamentals/primers/service-workers",target:"_blank",rel:"noopener noreferrer"}},[e._v("Service Worker 简介"),v("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=a.exports}}]);